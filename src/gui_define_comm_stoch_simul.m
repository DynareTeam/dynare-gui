function fHandle= gui_define_comm_stoch_simul()

bg_color = char(getappdata(0,'bg_color'));
special_color = char(getappdata(0,'special_color'));

fHandle = figure('Name', 'Dynare GUI - command definition', 'WindowStyle','modal', ...
    'NumberTitle', 'off', 'Units', 'characters','Color', [.941 .941 .941], ...
    'Position', [10 10 180 36], 'Visible', 'off', 'Resize', 'off');

movegui(fHandle,'center'); 

set(fHandle, 'Visible', 'on');

global dynare_gui_;
%global project_info;
model_settings = getappdata(0,'model_settings');



comm = dynare_gui_.stoch_simul;
numOptions = size(comm,1);
maxDisplayed = 12;

handles = [];

top = 35;

uicontrol( ...
    'Parent', fHandle, ...
    'Style', 'text', ...
    'Units', 'characters', 'BackgroundColor', bg_color,...
    'Position', [2 34 75 1.5], ...
    'FontWeight', 'bold', ...
    'String', 'Define stoch_simul command options:', ...
    'HorizontalAlignment', 'left');

handles.uipanel = uipanel( ...
    'Parent', fHandle, ...
    'Tag', 'uipanelShocks', ...
    'Units', 'characters', 'BackgroundColor', special_color,...
    'Position', [2 5 175 28], ...
    'Title', '');

% Create slider

if(numOptions > maxDisplayed)
    sld = uicontrol('Style', 'slider',...
        'Parent', fHandle, ...
        'Min',0,'Max',numOptions - maxDisplayed,'Value',numOptions - maxDisplayed ,...
        'Units', 'characters','Position', [175 5 3.5 28],...
        'Callback', @scrollPanel_Callback);
end
uicontrol( ...
    'Parent',  handles.uipanel, ...
    'Style', 'text', ...
    'Units', 'characters', 'BackgroundColor', special_color,...
    'Position', [2 top-9 20 1.5], ...
    'FontWeight', 'bold', ...
    'String', 'Command option:', ...
    'HorizontalAlignment', 'left');

uicontrol( ...
    'Parent',  handles.uipanel, ...
    'Style', 'text', ...
    'Units', 'characters', 'BackgroundColor', special_color,...
    'Position', [24 top-9 20 1.5], ...
    'FontWeight', 'bold', ...
    'String', 'Define value:', ...
    'HorizontalAlignment', 'left');

uicontrol( ...
    'Parent',  handles.uipanel, ...
    'Style', 'text', ...
    'Units', 'characters', 'BackgroundColor', special_color,...
    'Position', [46 top-9 15 1.5], ...
    'FontWeight', 'bold', ...
    'String', 'Default value:', ...
    'HorizontalAlignment', 'left');

uicontrol( ...
    'Parent',  handles.uipanel, ...
    'Style', 'text', ...
    'Units', 'characters', 'BackgroundColor', special_color,...
    'Position', [63 top-9 65 1.5], ...
    'FontWeight', 'bold', ...
    'String', 'Description:', ...
    'HorizontalAlignment', 'left');


new_top = top - 10;
visible = 'on';

for ii=1: size(comm,1)
    if(ii> maxDisplayed)
        visible = 'off';
    end
    handles.options(ii)= uicontrol( ...
        'Parent',  handles.uipanel, ...
        'Style', 'text', ...
        'Units', 'characters', 'BackgroundColor', special_color,...
        'Position', [2 new_top-ii*2 20 1.5], ...
        'String', comm{ii,1}, ...
        'HorizontalAlignment', 'left',...
        'Visible', visible);
    
    option_type = comm{ii,3};
    
    if(isfield(model_settings.stoch_simul, comm{ii,1}))
        userDefaultValue =  eval(sprintf('model_settings.stoch_simul.%s;',comm{ii,1}));
    else
         if(strcmp(option_type, 'check_option'))
             userDefaultValue= 0;
         else
             userDefaultValue='';
         end
    end
    
    
    if(strcmp(option_type, 'check_option'))
        
        
        handles.values(ii)=uicontrol( ...
            'Parent',  handles.uipanel, ...
            'Style', 'checkbox', ...
            'Units', 'characters', 'BackgroundColor', special_color,...
            'Position', [24 new_top-ii*2 20 1.5], ...
            'Value', userDefaultValue,...
            'TooltipString', option_type,...
            'HorizontalAlignment', 'left',...
            'Visible', visible);
        
        
    else
        handles.values(ii)=uicontrol( ...
            'Parent',  handles.uipanel, ...
            'Style', 'edit', ...
            'Units', 'characters', 'BackgroundColor', special_color,...
            'Position', [24 new_top-ii*2 20 1.5], ...
            'String', userDefaultValue,...
            'TooltipString', option_type,...
            'HorizontalAlignment', 'left',...
            'Visible', visible);
    end
    handles.defaults(ii)=uicontrol( ...
        'Parent',  handles.uipanel, ...
        'Style', 'text', ...
        'Units', 'characters', 'BackgroundColor', special_color,...
        'Position', [46 new_top-ii*2 15 1.5], ...
        'String', comm{ii,2}, ...
        'HorizontalAlignment', 'left',...
        'Visible', visible);
    
    textDesc = comm{ii,4};
    if (length(textDesc)> 110)
        textDesc = strcat(textDesc(1:110),'...');
    end
    
    handles.description(ii)=uicontrol( ...
        'Parent',  handles.uipanel, ...
        'Style', 'text', ...
        'Units', 'characters', 'BackgroundColor', special_color,...
        'Position', [63 new_top-ii*2 110 1.5], ...
        'String', textDesc, ...
        'TooltipString', comm{ii,4},...
        'HorizontalAlignment', 'left',...
        'Visible', visible);
    
end

   

% --- PUSHBUTTONS -------------------------------------
handles.pussbuttonSimulation = uicontrol( ...
    'Parent', fHandle, ...
    'Style', 'pushbutton', ...
    'Units', 'characters', ...
    'Position', [2 1 25 2], ...
    'String', 'Use these options', ...
    'Callback', @pussbuttonSimulation_Callback);

handles.pushbuttonSaveDefaults = uicontrol( ...
    'Parent', fHandle, ...
    'Style', 'pushbutton', ...
    'Units', 'characters', ...
    'Position', [29 1 25 2], ...
    'String', 'Save as default options', ...
    'Callback', @pushbuttonSaveDefaults_Callback);

handles.pushbuttonLoadDefaults = uicontrol( ...
    'Parent', fHandle, ...
    'Style', 'pushbutton', ...
    'Units', 'characters', ...
    'Position',[56 1 25 2], ...
    'String', 'Load default options', ...
    'Callback', @pushbuttonLoadDefaults_Callback);


handles.pussbuttonReset = uicontrol( ...
    'Parent', fHandle, ...
    'Style', 'pushbutton', ...
    'Units', 'characters', ...
    'Position', [83 1 25 2], ...
    'String', 'Reset options', ...
    'Callback', @pussbuttonReset_Callback);

    function scrollPanel_Callback(hObject,callbackdata)
        
        value = get(hObject, 'Value');
        
        value = floor(value);
        
        move = numOptions - maxDisplayed - value;
        
        for ii=1: size(comm,1)
            if(ii <= move || ii> move+maxDisplayed)
                visible = 'off';
                set(handles.options(ii), 'Visible', visible);
                set(handles.values(ii), 'Visible', visible);
                set(handles.defaults(ii), 'Visible', visible);
                set(handles.description(ii), 'Visible', visible);
                
            else
                visible = 'on';
                set(handles.options(ii), 'Visible', visible);
                set(handles.options(ii), 'Position', [2 new_top-(ii-move)*2 20 1.5]);
                set(handles.values(ii), 'Visible', visible);
                set(handles.values(ii), 'Position', [24 new_top-(ii-move)*2 20 1.5]);
                set(handles.defaults(ii), 'Visible', visible);
                set(handles.defaults(ii), 'Position',[46 new_top-(ii-move)*2 15 1.5]);
                set(handles.description(ii), 'Visible', visible);
                set(handles.description(ii), 'Position',[63 new_top-(ii-move)*2 110 1.5]);
            end
            
            
        end
    end

    function pussbuttonSimulation_Callback(hObject,callbackdata)
        comm_str = createCommandString();
        setappdata(0,'stock_simul',comm_str);
        close;
        
        %set(fHandle, 'UserData', comm_str);
        %set(getappdata(0, 'tabGroup'), 'SelectedTab' , callbackTabId);
        %gui_tabs.add_tab(getappdata(0,'main_figure'), 'Shocks simul. ');
        
    end

    function comm_str = createCommandString()
       comm_str = 'stoch_simul( ';
        first_option = 1;
        for ii = 1:numOptions
            
            option_type = get(handles.values(ii),'TooltipString');
            if(strcmp(option_type, 'check_option'))
                value = get(handles.values(ii),'Value');
                if(value)
                    option = get(handles.options(ii),'String');
                    if(first_option)
                        comm_str = strcat(comm_str, sprintf('%s ', option));
                        first_option = 0;
                    else
                        comm_str = strcat(comm_str, sprintf(', %s ',option));
                    end
                end
            else
                value = strtrim(get(handles.values(ii),'String'));
                if(~isempty(value))
                    option = get(handles.options(ii),'String');
                    if(first_option)
                        comm_str = strcat(comm_str, sprintf('%s = %s', option, value));
                        first_option = 0;
                    else
                        comm_str = strcat(comm_str, sprintf(', %s = %s',option, value));
                    end
                end
            end
            
        end
        comm_str = strcat(comm_str, ' )');
         
    end

    function pushbuttonSaveDefaults_Callback(hObject,callbackdata)
        for ii = 1:numOptions
            
            option_type = get(handles.values(ii),'TooltipString');
            if(strcmp(option_type, 'check_option'))
                value = get(handles.values(ii),'Value');
                eval(sprintf('model_settings.stoch_simul.%s = %d;',get(handles.options(ii),'String'),value));
            else
                value = strtrim(get(handles.values(ii),'String'));
                eval(sprintf('model_settings.stoch_simul.%s = ''%s'';',get(handles.options(ii),'String'),value));
            end
            
        end
        %fileName = 'dynare_gui_user_settings.mat';
        %save(fileName,'dynare_gui_user_settings_');
        setappdata(0, 'model_settings', model_settings);
        comm_str = createCommandString();
        setappdata(0,'stock_simul',comm_str);
        msgbox('Default values saved successfully', 'DynareGUI');
    end

    function pushbuttonLoadDefaults_Callback(hObject,callbackdata)
        for ii = 1:numOptions
            option_type = get(handles.values(ii),'TooltipString');
            try
                value = eval(sprintf('model_settings.stoch_simul.%s;',get(handles.options(ii),'String')));
            catch
                if(strcmp(option_type, 'check_option'))
                    value = 0;
                else
                    value = '';
                end
            end
            
            
            if(strcmp(option_type, 'check_option'))
                set(handles.values(ii),'Value', value);
            else
                set(handles.values(ii),'String', value);
            end
            
            
        end
        msgbox('Default values loaded successfully', 'DynareGUI');
    end

    function pussbuttonReset_Callback(hObject,callbackdata)
        
        for ii = 1:numOptions
            option_type = get(handles.values(ii),'TooltipString');
            if(strcmp(option_type, 'check_option'))
                set(handles.values(ii),'Value',0);
            else
                set(handles.values(ii),'String','');
            end
            
            
        end
    end
end
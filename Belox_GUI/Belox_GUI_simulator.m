function simulator_hdl = Belox_GUI_simulator
%-------------------------------------------------------------------------------
% BELOX_GUI_SIMULATOR
%     BELOX_GUI_SIMULATOR is the Main GUI screen for Belox_GUI model
%     interactive simulator.
% 
% Copyright (C) 2013 Belox Advisory Services
%
% This file is part of Belox DSGE model interactive simulator written in
% Dynare and Matlab.
%-------------------------------------------------------------------------------

global model_name;
global model_flag; 


% Initialize handles structure
handles = struct();


% Create all UI controls
init_gui();
build_gui();
movegui(handles.figureMain,'center');

% Assign function output
simulator_hdl = handles.figureMain;

% ---------------------------------------------------------------------------
	function build_gui()
% Creation of all uicontrols

		% --- FIGURE -------------------------------------
		handles.figureMain = figure( ...
			'Tag', 'figureMain', ...
			'Units', 'characters', ...
			'Position', [55.4 11.6153846153846 162 34.0769230769231], ...
			'Name', 'Belox DSGE Model Simulator', ...
			'MenuBar', 'none', ...
			'NumberTitle', 'off', ...
			'Color', get(0,'DefaultUicontrolBackgroundColor'));

		% --- AXES -------------------------------------
		handles.axes1 = axes( ...
			'Parent', handles.figureMain, ...
			'Tag', 'axes1', ...
			'Visible', 'off', ...
			'Units', 'characters', ...
			'Position', [54.8 13.6923076923077 50.2 11.6923076923077]);
        
        I = imread(char(model_flag), 'jpg');
        image(I);
        
        axis off; % Remove axis ticks and numbers
        axis image; % Set aspect ratio to obtain square pixels

		% --- STATIC TEXTS -------------------------------------
		handles.textModelName = uicontrol( ...
			'Parent', handles.figureMain, ...
			'Tag', 'textModelName', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [40 29 80 4], ...
			'FontSize', 24, ...
			'String', char(model_name));
        
        handles.title = uicontrol( ...
			'Parent', handles.figureMain, ...
			'Tag', 'text3', ...
			'UserData', zeros(1,0), ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [30 27 100 3], ...
			'FontSize', 20, ...
			'String', 'DSGE Macroeconomic Model');

		
        
       handles.textVersion = uicontrol( ...
			'Parent', handles.figureMain, ...
			'Tag', 'textVersion', ...
			'UserData', zeros(1,0), ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [4.6 2.5 150 1], ...
			'String', 'Belox DSGE Model Simulator v.1.4', ...
			'TooltipString', 'www.belox.rs');
        
        handles.textCopyright = uicontrol( ...
			'Parent', handles.figureMain, ...
			'Tag', 'textCopyright', ...
			'UserData', zeros(1,0), ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [4.6 1 150 1], ...
			'String', 'Copyright (C) 2014 Belox Advisory Services, All Rights Reserved.');


		% --- PUSHBUTTONS -------------------------------------
		handles.pushbuttonInitialization = uicontrol( ...
			'Parent', handles.figureMain, ...
			'Tag', 'pushbuttonInitialization', ...
			'UserData', zeros(1,0), ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [21 10 28 2.6], ...
			'FontSize', 10, ...
			'String', 'Initialization', ...
			'CData', zeros(1,0), ...
			'Callback', @pushbuttonInitialization_Callback);
        
        handles.pushbuttonCheckModel = uicontrol( ...
			'Parent', handles.figureMain, ...
			'Tag', 'pushbuttonCheckModel', ...
			'UserData', zeros(1,0), ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [51 10 28 2.6], ...
			'FontSize', 10, ...
			'String', 'Check model', ...
			'Enable', 'off', ...
			'CData', zeros(1,0), ...
			'Callback', @pushbuttonCheckModel_Callback);
        
        handles.pushbuttonShocks = uicontrol( ...
			'Parent', handles.figureMain, ...
			'Tag', 'pushbuttonShocks', ...
			'UserData', zeros(1,0), ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [81 10 28 2.6], ...
			'FontSize', 10, ...
			'String', 'IRFs', ...
			'Enable', 'off', ...
			'CData', zeros(1,0), ...
			'Callback', @pushbuttonShocks_Callback);

		handles.pushbuttonDecomposition = uicontrol( ...
			'Parent', handles.figureMain, ...
			'Tag', 'pushbuttonDecomposition', ...
			'UserData', zeros(1,0), ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [111 10 28 2.6], ...
			'FontSize', 10, ...
			'String', 'Shocks decomposition', ...
			'Enable', 'off', ...
			'CData', zeros(1,0), ...
			'Callback', @pushbuttonDecomposition_Callback);
        
        handles.pushbuttonForecast = uicontrol( ...
			'Parent', handles.figureMain, ...
			'Tag', 'pushbuttonForecast', ...
			'UserData', zeros(1,0), ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [35 7 28 2.6], ...
			'FontSize', 10, ...
			'String', 'Forecast', ...
			'Enable', 'off', ...
			'CData', zeros(1,0), ...
			'Callback', @pushbuttonForecast_Callback);

		handles.pushbuttonConditionalForecast = uicontrol( ...
			'Parent', handles.figureMain, ...
			'Tag', 'pushbuttonConditionalForecast', ...
			'UserData', zeros(1,0), ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [65 7 28 2.6], ...
			'FontSize', 10, ...
			'String', 'Conditional forecast', ...
			'Enable', 'off', ...
			'CData', zeros(1,0), ...
			'Callback', @pushbuttonConditionalForecast_Callback);

		handles.pushbuttonSetGoals = uicontrol( ...
			'Parent', handles.figureMain, ...
			'Tag', 'pushbuttonSetGoals', ...
			'UserData', zeros(1,0), ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [95 7 28 2.6], ...
			'FontSize', 10, ...
			'String', 'Advance settings', ...
			'Enable', 'off', ...
			'CData', zeros(1,0), ...
			'Callback', @pushbuttonSetGoals_Callback);
        
        handles.pushbuttonClose = uicontrol( ...
			'Parent', handles.figureMain, ...
			'Tag', 'pushbuttonClose', ...
			'UserData', zeros(1,0), ...
			'Style', 'pushbutton', ...
			'Units', 'characters', ...
			'Position', [72 4.6 15 2], ...
			'FontSize', 10, ...
			'String', 'Close', ...
			'CData', zeros(1,0), ...
			'Callback', @pushbuttonClose_Callback);

		
    end

    function init_gui()
        
       
        [num,txt,raw] = xlsread('Belox_GUI_modelinfo.xls','Model_Info','','basic');
        model_name = txt(2,2);
        model_flag = txt(3,2);
        first_historic_period_quarter = num(5,2);
        first_historic_period_year = num(5,3);
        last_historic_period_quarter = num(6,2);
        last_historic_period_year = num(6,3);
        num_historic_periods = num(7,1);
        last_quarter_mmmyyy = txt(6,2);
        data_file = txt(4,2);
        first_observation = num(9,1);
        max_forecast_periods= num(10,1);
        
        setappdata(0,'model_name',model_name);
        setappdata(0,'first_historic_period_quarter',first_historic_period_quarter);
        setappdata(0,'first_historic_period_year',first_historic_period_year);
        setappdata(0,'last_historic_period_year',last_historic_period_year);
        setappdata(0,'last_historic_period_quarter',last_historic_period_quarter);
        setappdata(0,'num_historic_periods',num_historic_periods);
        setappdata(0,'last_quarter_mmmyyy',last_quarter_mmmyyy);
        setappdata(0,'last_quarter_qqyyyy',sprintf('Q%d %d', last_historic_period_quarter, last_historic_period_year));
        setappdata(0,'first_observation',first_observation);
        setappdata(0,'max_forecast_periods',max_forecast_periods);
        first_observable_period_year = first_historic_period_year + floor(first_observation/4);
        first_observable_period_quarter = first_observation - floor(first_observation/4)*4;
        setappdata(0,'first_observable_period_quarter',first_observable_period_quarter);
        setappdata(0,'first_observable_period_year',first_observable_period_year );
        
        setappdata(0,'data_file',data_file);
        

    end


% ---------------------------------------------------------------------------
	function pushbuttonShocks_Callback(hObject,evendata) 

        h=gui_shock_simulation;
        waitfor(h);
        
	end

% ---------------------------------------------------------------------------
	function pushbuttonForecast_Callback(hObject,evendata) 
       
        h=gui_forecast;
        waitfor(h);
	end

% ---------------------------------------------------------------------------
	function pushbuttonConditionalForecast_Callback(hObject,evendata) 
        h=gui_cond_forecast;
        waitfor(h);
	end

% ---------------------------------------------------------------------------
	function pushbuttonClose_Callback(hObject,evendata) 
        close;
	end

% ---------------------------------------------------------------------------
	function pushbuttonSetGoals_Callback(hObject,evendata) 
        h=gui_set_goals;
        waitfor(h);
	end

% ---------------------------------------------------------------------------
	function pushbuttonDecomposition_Callback(hObject,evendata) 
        h=gui_shock_decomposition;
        waitfor(h);
	end

% ---------------------------------------------------------------------------
	function pushbuttonCheckModel_Callback(hObject,evendata) %#ok<INUSD>
        h=gui_check_model;
        waitfor(h);
	end

% ---------------------------------------------------------------------------
	function pushbuttonInitialization_Callback(hObject,evendata) 
    gui_initialization;
    init=getappdata(0,'Initialization');
    if(init)
            set(handles.pushbuttonShocks,'Enable','On');
            set(handles.pushbuttonForecast,'Enable','On');
            set(handles.pushbuttonConditionalForecast,'Enable','On');
            set(handles.pushbuttonDecomposition,'Enable','On');
            set(handles.pushbuttonCheckModel,'Enable','On');
            set(handles.pushbuttonSetGoals,'Enable','On');
    end

    end
end